
:root{
    --grid--gap-xs: 0.25rem;
    --grid--gap-s: 0.5rem;
    --grid--gap-m: 1rem;
    --grid--gap-l: 1.5rem;
    --grid--gap-xl: 2rem;
   
    --grid--pad-xs: 0.25rem;
    --grid--pad-s: 0.5rem;
    --grid--pad-m: 1rem;
    --grid--pad-l: 1.5rem;
    --grid--pad-xl: 2rem;
     
    --grid--col-pad-xs: 0.25rem;
    --grid--col-pad-s: 0.5rem;
    --grid--col-pad-m: 1rem;
    --grid--col-pad-l: 1.5rem;
    --grid--col-pad-xl: 2rem;
}

// created to apply the same class value to multiple columns at the same time (useful for symmetrical declaration of columns)
@mixin column($n, $max){
    %mod#{$n} {
        @content;
    }
    $i: $n;
    @while $i <= $max {
        .grid__col#{$i} {
            @extend %mod#{$n};
        }
        $i: $i + 1;
    }
}

@mixin col-size-1{grid-column:span 1;}
@mixin col-size-2{grid-column:span 2;}
@mixin col-size-3{grid-column:span 3;}
@mixin col-size-4{grid-column:span 4;}
@mixin col-size-6{grid-column:span 6;}
@mixin col-size-8{grid-column:span 8;}
@mixin col-size-10{grid-column:span 10;}
@mixin col-size-12{grid-column:span 12;}

@mixin row-size-1{grid-row:span 1;}
@mixin row-size-2{grid-row:span 2;}
@mixin row-size-3{grid-row:span 3;}
@mixin row-size-4{grid-row:span 4;}
@mixin row-size-5{grid-row:span 5;}
@mixin row-size-6{grid-row:span 6;}

.grid{display:grid; grid-template-columns:repeat(12, 1fr);}

.grid--pad{
    &-xs {padding: var(--grid--gap-xs);}
    &-s {padding: var(--grid--gap-s);}
    &-m {padding: var(--grid--gap-m);}
    &-l {padding: var(--grid--gap-l);}
    &-xl {padding: var(--grid--gap-xl);}
}
  
.grid--col-pad{
    &-xs .grid__col{padding: var(--grid--col-pad-xs);}
    &-s .grid__col{padding: var(--grid--col-pad-s);}
    &-m .grid__col{padding: var(--grid--col-pad-m);}
    &-l .grid__col{padding: var(--grid--col-pad-l);}
    &-xl .grid__col{padding: var(--grid--col-pad-xl);}
}

.grid--gap {
    &-xs {grid-gap: var(--grid--gap-xs) 0;}
    &-s {grid-gap: var(--grid--gap-s) 0;}
    &-m {grid-gap: var(--grid--gap-m) 0;}
    &-l {grid-gap: var(--grid--gap-l) 0;}
    &-xl {grid-gap: var(--grid--gap-xl) 0;}
}

.grid__col {
    @include col-size-12;
    word-break: break-word;
}
  
// Tablet size
@media screen and (min-width: 481px) {
    .grid__col{@include col-size-6;}

    .grid--gap {
        &-xs {grid-gap: var(--grid--gap-xs);}
        &-s {grid-gap: var(--grid--gap-s);}
        &-m {grid-gap: var(--grid--gap-m);}
        &-l {grid-gap: var(--grid--gap-l);}
        &-xl {grid-gap: var(--grid--gap-xl);}
    }
}

// Medium Desktop Size
@media screen and (min-width: 769px) {
    .grid__col{@include col-size-1;} // basic value of the length of the column
}
